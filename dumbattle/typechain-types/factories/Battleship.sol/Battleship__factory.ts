/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Battleship,
  BattleshipInterface,
} from "../../Battleship.sol/Battleship";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICreateVerifier",
        name: "_createVerifier",
        type: "address",
      },
      {
        internalType: "contract IMoveVerifier",
        name: "_moveVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_boardHash",
        type: "uint256",
      },
    ],
    name: "createGame",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createVerifier",
    outputs: [
      {
        internalType: "contract ICreateVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_gameID",
        type: "uint32",
      },
    ],
    name: "game",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player1",
            type: "address",
          },
          {
            internalType: "address",
            name: "player2",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "player1Hash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "player2Hash",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isHit",
                type: "bool",
              },
            ],
            internalType: "struct Battleship.Move[]",
            name: "moves",
            type: "tuple[]",
          },
        ],
        internalType: "struct Battleship.GamePublicMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_gameID",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_boardHash",
        type: "uint256",
      },
    ],
    name: "joinGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moveVerifier",
    outputs: [
      {
        internalType: "contract IMoveVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_gameID",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_moveX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_moveY",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isPreviousMoveAHit",
        type: "bool",
      },
    ],
    name: "submitMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620021473803806200214783398181016040528101906200003791906200016a565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b6000620000ed82620000cc565b9050919050565b620000ff81620000e0565b81146200010b57600080fd5b50565b6000815190506200011f81620000f4565b92915050565b60006200013282620000cc565b9050919050565b620001448162000125565b81146200015057600080fd5b50565b600081519050620001648162000139565b92915050565b60008060408385031215620001845762000183620000a7565b5b600062000194858286016200010e565b9250506020620001a78582860162000153565b9150509250929050565b60805160a051611f62620001e560003960008181610ab60152610d1901526000818161038b0152610aed0152611f626000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ea6beb614610067578063453827c614610083578063849cfef4146100a1578063ac744a2c146100d1578063c894cafe14610101578063d173bf9c1461011d575b600080fd5b610081600480360381019061007c91906110bf565b61013b565b005b61008b610389565b60405161009891906111b2565b60405180910390f35b6100bb60048036038101906100b691906111cd565b6103ad565b6040516100c8919061123c565b60405180910390f35b6100eb60048036038101906100e69190611257565b610494565b6040516100f89190611436565b60405180910390f35b61011b60048036038101906101169190611484565b6106f9565b005b610125610ab4565b604051610132919061153f565b60405180910390f35b60008463ffffffff161015610185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017c906115b7565b60405180910390fd5b60008054906101000a900463ffffffff1663ffffffff168463ffffffff16106101e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101da906115b7565b60405180910390fd5b6000600160008663ffffffff1663ffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90611649565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610322906116b5565b60405180910390fd5b610336848484610ad8565b338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600301819055505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006103ba848484610ad8565b60008060009054906101000a900463ffffffff16905060016000808282829054906101000a900463ffffffff166103f19190611704565b92506101000a81548163ffffffff021916908363ffffffff1602179055506000600160008363ffffffff1663ffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508381600201819055506000816005018190555081925050509392505050565b61049c610f56565b60008263ffffffff1610156104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd906115b7565b60405180910390fd5b60008054906101000a900463ffffffff1663ffffffff168263ffffffff1610610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b906115b7565b60405180910390fd5b6000600160008463ffffffff1663ffffffff16815260200190815260200160002090506000816005015467ffffffffffffffff8111156105875761058661173c565b5b6040519080825280602002602001820160405280156105c057816020015b6105ad610fb1565b8152602001906001900390816105a55790505b50905060005b826005015481101561064c5782600401600082815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508282815181106106345761063361176b565b5b602002602001018190525080806001019150506105c6565b506040518060a001604052808360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183600201548152602001836003015481526020018281525092505050919050565b60008663ffffffff161015610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a906115b7565b60405180910390fd5b60008054906101000a900463ffffffff1663ffffffff168663ffffffff16106107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906115b7565b60405180910390fd5b6000600160008863ffffffff1663ffffffff16815260200190815260200160002090506000816002015490506000600283600501546107e091906117c9565b0361087c578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90611846565b60405180910390fd5b610916565b8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090590611846565b60405180910390fd5b816003015490505b600087101580156109275750600387105b610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906118b2565b60405180910390fd5b600086101580156109775750600386105b6109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad9061191e565b60405180910390fd5b600082600501541115610a20576000826004016000600185600501546109dc919061193e565b81526020019081526020016000209050610a028686848785600001548660010154610d04565b838160020160006101000a81548160ff021916908315150217905550505b60405180606001604052808881526020018781526020016000151581525082600401600084600501548152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001826005016000828254610aa39190611972565b925050819055505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008383810190610ae99190611ab4565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166343753b4d604051806040016040528084600060088110610b4657610b4561176b565b5b6020020151815260200184600160088110610b6457610b6361176b565b5b60200201518152506040518060400160405280604051806040016040528087600260088110610b9657610b9561176b565b5b6020020151815260200187600360088110610bb457610bb361176b565b5b60200201518152508152602001604051806040016040528087600460088110610be057610bdf61176b565b5b6020020151815260200187600560088110610bfe57610bfd61176b565b5b6020020151815250815250604051806040016040528086600660088110610c2857610c2761176b565b5b6020020151815260200186600760088110610c4657610c4561176b565b5b60200201518152506040518060200160405280888152506040518563ffffffff1660e01b8152600401610c7c9493929190611d00565b6020604051808303816000875af1158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbf9190611d5c565b610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf590611dd5565b60405180910390fd5b50505050565b60008686810190610d159190611ab4565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635fe8c13b604051806040016040528084600060088110610d7257610d7161176b565b5b6020020151815260200184600160088110610d9057610d8f61176b565b5b60200201518152506040518060400160405280604051806040016040528087600260088110610dc257610dc161176b565b5b6020020151815260200187600360088110610de057610ddf61176b565b5b60200201518152508152602001604051806040016040528087600460088110610e0c57610e0b61176b565b5b6020020151815260200187600560088110610e2a57610e2961176b565b5b6020020151815250815250604051806040016040528086600660088110610e5457610e5361176b565b5b6020020151815260200186600760088110610e7257610e7161176b565b5b602002015181525060405180608001604052808a610e91576000610e94565b60015b60ff1681526020018b8152602001898152602001888152506040518563ffffffff1660e01b8152600401610ecb9493929190611e79565b6020604051808303816000875af1158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e9190611d5c565b610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4490611f0c565b60405180910390fd5b50505050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001606081525090565b604051806060016040528060008152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b61100181610fe8565b811461100c57600080fd5b50565b60008135905061101e81610ff8565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261104957611048611024565b5b8235905067ffffffffffffffff81111561106657611065611029565b5b6020830191508360018202830111156110825761108161102e565b5b9250929050565b6000819050919050565b61109c81611089565b81146110a757600080fd5b50565b6000813590506110b981611093565b92915050565b600080600080606085870312156110d9576110d8610fde565b5b60006110e78782880161100f565b945050602085013567ffffffffffffffff81111561110857611107610fe3565b5b61111487828801611033565b93509350506040611127878288016110aa565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061117861117361116e84611133565b611153565b611133565b9050919050565b600061118a8261115d565b9050919050565b600061119c8261117f565b9050919050565b6111ac81611191565b82525050565b60006020820190506111c760008301846111a3565b92915050565b6000806000604084860312156111e6576111e5610fde565b5b600084013567ffffffffffffffff81111561120457611203610fe3565b5b61121086828701611033565b93509350506020611223868287016110aa565b9150509250925092565b61123681610fe8565b82525050565b6000602082019050611251600083018461122d565b92915050565b60006020828403121561126d5761126c610fde565b5b600061127b8482850161100f565b91505092915050565b600061128f82611133565b9050919050565b61129f81611284565b82525050565b6112ae81611089565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60008115159050919050565b6112f5816112e0565b82525050565b60608201600082015161131160008501826112a5565b50602082015161132460208501826112a5565b50604082015161133760408501826112ec565b50505050565b600061134983836112fb565b60608301905092915050565b6000602082019050919050565b600061136d826112b4565b61137781856112bf565b9350611382836112d0565b8060005b838110156113b357815161139a888261133d565b97506113a583611355565b925050600181019050611386565b5085935050505092915050565b600060a0830160008301516113d86000860182611296565b5060208301516113eb6020860182611296565b5060408301516113fe60408601826112a5565b50606083015161141160608601826112a5565b50608083015184820360808601526114298282611362565b9150508091505092915050565b6000602082019050818103600083015261145081846113c0565b905092915050565b611461816112e0565b811461146c57600080fd5b50565b60008135905061147e81611458565b92915050565b60008060008060008060a087890312156114a1576114a0610fde565b5b60006114af89828a0161100f565b96505060206114c089828a016110aa565b95505060406114d189828a016110aa565b945050606087013567ffffffffffffffff8111156114f2576114f1610fe3565b5b6114fe89828a01611033565b9350935050608061151189828a0161146f565b9150509295509295509295565b60006115298261117f565b9050919050565b6115398161151e565b82525050565b60006020820190506115546000830184611530565b92915050565b600082825260208201905092915050565b7f496e76616c69642047616d652049440000000000000000000000000000000000600082015250565b60006115a1600f8361155a565b91506115ac8261156b565b602082019050919050565b600060208201905081810360008301526115d081611594565b9050919050565b7f4e6f7420616c6c6f77656420746f206a6f696e20796f7572206f776e2067616d60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061163360218361155a565b915061163e826115d7565b604082019050919050565b6000602082019050818103600083015261166281611626565b9050919050565b7f47616d652069732066756c6c0000000000000000000000000000000000000000600082015250565b600061169f600c8361155a565b91506116aa82611669565b602082019050919050565b600060208201905081810360008301526116ce81611692565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061170f82610fe8565b915061171a83610fe8565b9250828201905063ffffffff811115611736576117356116d5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117d482611089565b91506117df83611089565b9250826117ef576117ee61179a565b5b828206905092915050565b7f4e6f7420796f7572207475726e21000000000000000000000000000000000000600082015250565b6000611830600e8361155a565b915061183b826117fa565b602082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f496e76616c6964204d6f76652028582900000000000000000000000000000000600082015250565b600061189c60108361155a565b91506118a782611866565b602082019050919050565b600060208201905081810360008301526118cb8161188f565b9050919050565b7f496e76616c6964204d6f76652028592900000000000000000000000000000000600082015250565b600061190860108361155a565b9150611913826118d2565b602082019050919050565b60006020820190508181036000830152611937816118fb565b9050919050565b600061194982611089565b915061195483611089565b925082820390508181111561196c5761196b6116d5565b5b92915050565b600061197d82611089565b915061198883611089565b92508282019050808211156119a05761199f6116d5565b5b92915050565b6000601f19601f8301169050919050565b6119c0826119a6565b810181811067ffffffffffffffff821117156119df576119de61173c565b5b80604052505050565b60006119f2610fd4565b90506119fe82826119b7565b919050565b600067ffffffffffffffff821115611a1e57611a1d61173c565b5b602082029050919050565b6000611a3c611a3784611a03565b6119e8565b90508060208402830185811115611a5657611a5561102e565b5b835b81811015611a7f5780611a6b88826110aa565b845260208401935050602081019050611a58565b5050509392505050565b600082601f830112611a9e57611a9d611024565b5b6008611aab848285611a29565b91505092915050565b60006101008284031215611acb57611aca610fde565b5b6000611ad984828501611a89565b91505092915050565b600060029050919050565b600081905092915050565b6000819050919050565b6000611b0e83836112a5565b60208301905092915050565b6000602082019050919050565b611b3081611ae2565b611b3a8184611aed565b9250611b4582611af8565b8060005b83811015611b76578151611b5d8782611b02565b9650611b6883611b1a565b925050600181019050611b49565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b600081905092915050565b611bb281611ae2565b611bbc8184611b9e565b9250611bc782611af8565b8060005b83811015611bf8578151611bdf8782611b02565b9650611bea83611b1a565b925050600181019050611bcb565b505050505050565b6000611c0c8383611ba9565b60408301905092915050565b6000602082019050919050565b611c2e81611b7e565b611c388184611b89565b9250611c4382611b94565b8060005b83811015611c74578151611c5b8782611c00565b9650611c6683611c18565b925050600181019050611c47565b505050505050565b600060019050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b611cb281611c7c565b611cbc8184611c87565b9250611cc782611c92565b8060005b83811015611cf8578151611cdf8782611b02565b9650611cea83611c9c565b925050600181019050611ccb565b505050505050565b600061012082019050611d166000830187611b27565b611d236040830186611c25565b611d3060c0830185611b27565b611d3e610100830184611ca9565b95945050505050565b600081519050611d5681611458565b92915050565b600060208284031215611d7257611d71610fde565b5b6000611d8084828501611d47565b91505092915050565b7f496e76616c696420626f61726420737461746520285a4b290000000000000000600082015250565b6000611dbf60188361155a565b9150611dca82611d89565b602082019050919050565b60006020820190508181036000830152611dee81611db2565b9050919050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b611e2b81611df5565b611e358184611e00565b9250611e4082611e0b565b8060005b83811015611e71578151611e588782611b02565b9650611e6383611e15565b925050600181019050611e44565b505050505050565b600061018082019050611e8f6000830187611b27565b611e9c6040830186611c25565b611ea960c0830185611b27565b611eb7610100830184611e22565b95945050505050565b7f496e76616c6964206d6f766520285a4b29000000000000000000000000000000600082015250565b6000611ef660118361155a565b9150611f0182611ec0565b602082019050919050565b60006020820190508181036000830152611f2581611ee9565b905091905056fea26469706673582212207f784ec08f3deb6a4f4e900e3295c73de3c856b0bf1c06c685dab9344127293c64736f6c63430008180033";

type BattleshipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BattleshipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Battleship__factory extends ContractFactory {
  constructor(...args: BattleshipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _createVerifier: AddressLike,
    _moveVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _createVerifier,
      _moveVerifier,
      overrides || {}
    );
  }
  override deploy(
    _createVerifier: AddressLike,
    _moveVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _createVerifier,
      _moveVerifier,
      overrides || {}
    ) as Promise<
      Battleship & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Battleship__factory {
    return super.connect(runner) as Battleship__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BattleshipInterface {
    return new Interface(_abi) as BattleshipInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Battleship {
    return new Contract(address, _abi, runner) as unknown as Battleship;
  }
}
